apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    deprecated.daemonset.template.generation: "9"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{"deprecated.daemonset.template.generation":"8","nvidia.com/last-applied-hash":"2844581652","openshift.io/scc":"hostmount-anyuid"},"creationTimestamp":"2025-10-21T16:20:17Z","generation":8,"labels":{"app":"nvidia-container-toolkit-daemonset","app.kubernetes.io/managed-by":"gpu-operator","helm.sh/chart":"gpu-operator-v25.3.4"},"name":"nvidia-container-toolkit-daemonset","namespace":"default","ownerReferences":[{"apiVersion":"nvidia.com/v1","blockOwnerDeletion":true,"controller":true,"kind":"ClusterPolicy","name":"cluster-policy","uid":"4b2e3e8d-59d0-4af9-beee-4e513add14bd"}],"resourceVersion":"480823","uid":"a2044cde-54f5-4885-8f21-ed22b78289db"},"spec":{"revisionHistoryLimit":10,"selector":{"matchLabels":{"app":"nvidia-container-toolkit-daemonset"}},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"nvidia-container-toolkit-daemonset","app.kubernetes.io/managed-by":"gpu-operator","helm.sh/chart":"gpu-operator-v25.3.4"}},"spec":{"containers":[{"args":["/bin/entrypoint.sh"],"command":["/bin/bash","-c"],"env":[{"name":"ROOT","value":"/usr/local/nvidia"},{"name":"NVIDIA_CONTAINER_RUNTIME_MODES_CDI_DEFAULT_KIND","value":"management.nvidia.com/gpu"},{"name":"NVIDIA_VISIBLE_DEVICES","value":"void"},{"name":"TOOLKIT_PID_FILE","value":"/run/nvidia/toolkit/toolkit.pid"},{"name":"CDI_ENABLED","value":"true"},{"name":"NVIDIA_CONTAINER_RUNTIME_MODES_CDI_ANNOTATION_PREFIXES","value":"nvidia.cdi.k8s.io/"},{"name":"CRIO_CONFIG_MODE","value":"config"},{"name":"CONTAINERD_SOCKET","value":"/runtime/sock-dir/containerd.sock"},{"name":"RUNTIME","value":"containerd"},{"name":"CONTAINERD_RUNTIME_CLASS","value":"nvidia"},{"name":"RUNTIME_CONFIG","value":"/runtime/config-dir/config.toml"},{"name":"CONTAINERD_CONFIG","value":"/runtime/config-dir/config.toml"},{"name":"RUNTIME_SOCKET","value":"/runtime/sock-dir/containerd.sock"}],"image":"nvcr.io/nvidia/k8s/container-toolkit:v1.17.8-ubuntu20.04","imagePullPolicy":"IfNotPresent","name":"nvidia-container-toolkit-ctr","resources":{},"securityContext":{"privileged":true,"seLinuxOptions":{"level":"s0"}},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/bin/entrypoint.sh","name":"nvidia-container-toolkit-entrypoint","readOnly":true,"subPath":"entrypoint.sh"},{"mountPath":"/run/nvidia/toolkit","name":"toolkit-root"},{"mountPath":"/run/nvidia/validations","name":"run-nvidia-validations"},{"mountPath":"/usr/local/nvidia","name":"toolkit-install-dir"},{"mountPath":"/usr/share/containers/oci/hooks.d","name":"crio-hooks"},{"mountPath":"/driver-root","mountPropagation":"HostToContainer","name":"driver-install-dir"},{"mountPath":"/host","mountPropagation":"HostToContainer","name":"host-root","readOnly":true},{"mountPath":"/var/run/cdi","name":"cdi-root"},{"mountPath":"/runtime/config-dir/","name":"containerd-config"},{"mountPath":"/runtime/sock-dir/","name":"containerd-socket"}]}],"dnsPolicy":"ClusterFirst","hostPID":true,"initContainers":[{"args":["--root=/driver-root"],"command":["/usr/local/bin/nvidia-validator"],"env":[{"name":"WITH_WAIT","value":"true"},{"name":"COMPONENT","value":"driver"},{"name":"OPERATOR_NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"DRIVER_INSTALL_DIR","value":"/"},{"name":"DRIVER_INSTALL_DIR_CTR_PATH","value":"/driver-root"}],"image":"nvcr.io/nvidia/cloud-native/gpu-operator-validator:v25.3.4","imagePullPolicy":"IfNotPresent","name":"driver-validation","resources":{},"securityContext":{"privileged":true,"seLinuxOptions":{"level":"s0"}},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/driver-root","mountPropagation":"HostToContainer","name":"driver-install-dir"},{"mountPath":"/","mountPropagation":"HostToContainer","name":"driver-install-dir"},{"mountPath":"/run/nvidia/validations","mountPropagation":"Bidirectional","name":"run-nvidia-validations"},{"mountPath":"/host","mountPropagation":"HostToContainer","name":"host-root","readOnly":true},{"mountPath":"/host-dev-char","name":"host-dev-char"}]}],"nodeSelector":{"nvidia.com/gpu.deploy.container-toolkit":"true"},"priorityClassName":"system-node-critical","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"serviceAccount":"nvidia-container-toolkit","serviceAccountName":"nvidia-container-toolkit","terminationGracePeriodSeconds":30,"tolerations":[{"effect":"NoSchedule","key":"nvidia.com/gpu","operator":"Exists"}],"volumes":[{"configMap":{"defaultMode":448,"name":"nvidia-container-toolkit-entrypoint"},"name":"nvidia-container-toolkit-entrypoint"},{"hostPath":{"path":"/run/nvidia/toolkit","type":"DirectoryOrCreate"},"name":"toolkit-root"},{"hostPath":{"path":"/run/nvidia/validations","type":"DirectoryOrCreate"},"name":"run-nvidia-validations"},{"hostPath":{"path":"/","type":"DirectoryOrCreate"},"name":"driver-install-dir"},{"hostPath":{"path":"/","type":""},"name":"host-root"},{"hostPath":{"path":"/usr/local/nvidia","type":""},"name":"toolkit-install-dir"},{"hostPath":{"path":"/run/containers/oci/hooks.d","type":""},"name":"crio-hooks"},{"hostPath":{"path":"/dev/char","type":""},"name":"host-dev-char"},{"hostPath":{"path":"/var/run/cdi","type":"DirectoryOrCreate"},"name":"cdi-root"},{"hostPath":{"path":"/etc/containerd","type":"DirectoryOrCreate"},"name":"containerd-config"},{"hostPath":{"path":"/run/k3s/containerd","type":""},"name":"containerd-socket"}]}},"updateStrategy":{"rollingUpdate":{"maxSurge":0,"maxUnavailable":1},"type":"RollingUpdate"}},"status":{"currentNumberScheduled":2,"desiredNumberScheduled":2,"numberAvailable":1,"numberMisscheduled":0,"numberReady":1,"numberUnavailable":1,"observedGeneration":8,"updatedNumberScheduled":1}}
    nvidia.com/last-applied-hash: "2844581652"
    openshift.io/scc: hostmount-anyuid
  creationTimestamp: "2025-10-21T16:20:17Z"
  generation: 9
  labels:
    app: nvidia-container-toolkit-daemonset
    app.kubernetes.io/managed-by: gpu-operator
    helm.sh/chart: gpu-operator-v25.3.4
  name: nvidia-container-toolkit-daemonset
  namespace: default
  ownerReferences:
  - apiVersion: nvidia.com/v1
    blockOwnerDeletion: true
    controller: true
    kind: ClusterPolicy
    name: cluster-policy
    uid: 4b2e3e8d-59d0-4af9-beee-4e513add14bd
  resourceVersion: "484926"
  uid: a2044cde-54f5-4885-8f21-ed22b78289db
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: nvidia-container-toolkit-daemonset
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nvidia-container-toolkit-daemonset
        app.kubernetes.io/managed-by: gpu-operator
        helm.sh/chart: gpu-operator-v25.3.4
    spec:
      containers:
      - args:
        - /bin/entrypoint.sh
        command:
        - /bin/bash
        - -c
        env:
        - name: ROOT
          value: /usr/local/nvidia
        - name: NVIDIA_CONTAINER_RUNTIME_MODES_CDI_DEFAULT_KIND
          value: management.nvidia.com/gpu
        - name: NVIDIA_VISIBLE_DEVICES
          value: void
        - name: TOOLKIT_PID_FILE
          value: /run/nvidia/toolkit/toolkit.pid
        - name: CDI_ENABLED
          value: "true"
        - name: NVIDIA_CONTAINER_RUNTIME_MODES_CDI_ANNOTATION_PREFIXES
          value: nvidia.cdi.k8s.io/
        - name: CRIO_CONFIG_MODE
          value: config
        - name: CONTAINERD_SOCKET
          value: /runtime/sock-dir/containerd.sock
        - name: RUNTIME
          value: containerd
        - name: CONTAINERD_RUNTIME_CLASS
          value: nvidia
        - name: RUNTIME_CONFIG
          value: /runtime/config-dir/config.toml
        - name: CONTAINERD_CONFIG
          value: /runtime/config-dir/config.toml
        - name: RUNTIME_SOCKET
          value: /runtime/sock-dir/containerd.sock
        image: nvcr.io/nvidia/k8s/container-toolkit:v1.17.8-ubuntu20.04
        imagePullPolicy: IfNotPresent
        name: nvidia-container-toolkit-ctr
        resources: {}
        securityContext:
          privileged: true
          seLinuxOptions:
            level: s0
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /bin/entrypoint.sh
          name: nvidia-container-toolkit-entrypoint
          readOnly: true
          subPath: entrypoint.sh
        - mountPath: /run/nvidia/toolkit
          name: toolkit-root
        - mountPath: /run/nvidia/validations
          name: run-nvidia-validations
        - mountPath: /usr/local/nvidia
          name: toolkit-install-dir
        - mountPath: /usr/share/containers/oci/hooks.d
          name: crio-hooks
        - mountPath: /driver-root
          mountPropagation: HostToContainer
          name: driver-install-dir
        - mountPath: /host
          mountPropagation: HostToContainer
          name: host-root
          readOnly: true
        - mountPath: /var/run/cdi
          name: cdi-root
        - mountPath: /runtime/config-dir/
          name: containerd-config
        - mountPath: /runtime/sock-dir/
          name: containerd-socket
      dnsPolicy: ClusterFirst
      hostPID: true
      initContainers:
      - args:
        - --root=/driver-root
        command:
        - /usr/local/bin/nvidia-validator
        env:
        - name: WITH_WAIT
          value: "true"
        - name: COMPONENT
          value: driver
        - name: OPERATOR_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: DRIVER_INSTALL_DIR
          value: /
        - name: DRIVER_INSTALL_DIR_CTR_PATH
          value: /driver-root
        image: nvcr.io/nvidia/cloud-native/gpu-operator-validator:v25.3.4
        imagePullPolicy: IfNotPresent
        name: driver-validation
        resources: {}
        securityContext:
          privileged: true
          seLinuxOptions:
            level: s0
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /driver-root
          mountPropagation: HostToContainer
          name: driver-install-dir
        - mountPath: /
          mountPropagation: HostToContainer
          name: driver-install-dir
        - mountPath: /run/nvidia/validations
          mountPropagation: Bidirectional
          name: run-nvidia-validations
        - mountPath: /host
          mountPropagation: HostToContainer
          name: host-root
          readOnly: true
        - mountPath: /host-dev-char
          name: host-dev-char
      nodeSelector:
        nvidia.com/gpu.deploy.container-toolkit: "true"
      priorityClassName: system-node-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: nvidia-container-toolkit
      serviceAccountName: nvidia-container-toolkit
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: nvidia.com/gpu
        operator: Exists
      volumes:
      - configMap:
          defaultMode: 448
          name: nvidia-container-toolkit-entrypoint
        name: nvidia-container-toolkit-entrypoint
      - hostPath:
          path: /run/nvidia/toolkit
          type: DirectoryOrCreate
        name: toolkit-root
      - hostPath:
          path: /run/nvidia/validations
          type: DirectoryOrCreate
        name: run-nvidia-validations
      - hostPath:
          path: /
          type: DirectoryOrCreate
        name: driver-install-dir
      - hostPath:
          path: /
          type: ""
        name: host-root
      - hostPath:
          path: /usr/local/nvidia
          type: ""
        name: toolkit-install-dir
      - hostPath:
          path: /run/containers/oci/hooks.d
          type: ""
        name: crio-hooks
      - hostPath:
          path: /dev/char
          type: ""
        name: host-dev-char
      - hostPath:
          path: /var/run/cdi
          type: DirectoryOrCreate
        name: cdi-root
      - hostPath:
          path: /etc/containerd
          type: DirectoryOrCreate
        name: containerd-config
      - hostPath:
          path: /run/k3s/containerd
          type: ""
        name: containerd-socket
  updateStrategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
status:
  currentNumberScheduled: 2
  desiredNumberScheduled: 2
  numberAvailable: 1
  numberMisscheduled: 0
  numberReady: 1
  numberUnavailable: 1
  observedGeneration: 9
  updatedNumberScheduled: 1
