FROM nvcr.io/nvidia/l4t-jetpack:r36.3.0

ENV DEBIAN_FRONTEND=noninteractive \
     PIP_NO_CACHE_DIR=1 \
     PIP_INDEX_URL=https://pypi.python.org/simple \
     PIP_TRUSTED_HOST=pypi.python.org \
     PYTHONUNBUFFERED=1 \
     VIRTUAL_ENV=/opt/venv \
     PATH="/opt/venv/bin:$PATH"

USER root

# Copy requirements file
COPY requirements.spark2.txt /workspace/requirements.spark2.txt

# OS + Python deps
RUN --mount=type=cache,target=/var/cache/apt \
        apt-get update && \
        apt-get install -y --no-install-recommends \
            python3.10 python3.10-venv python3-pip \
            ca-certificates curl wget git build-essential \
            libopenblas0 libgomp1 && \
    wget https://developer.download.nvidia.com/compute/cusparselt/0.8.0/local_installers/cusparselt-local-tegra-repo-ubuntu2204-0.8.0_0.8.0-1_arm64.deb -O /tmp/cusparselt.deb && \
    dpkg -i /tmp/cusparselt.deb && \
    cp /var/cusparselt-local-tegra-repo-ubuntu2204-0.8.0/cusparselt-*-keyring.gpg /usr/share/keyrings/ && \
    apt-get install -y --no-install-recommends cusparselt && \
    rm -f /tmp/cusparselt.deb && ldconfig && \
    rm -rf /var/lib/apt/lists/*

# --- Venv Setup ---
RUN python3.10 -m venv --system-site-packages $VIRTUAL_ENV
RUN $VIRTUAL_ENV/bin/pip install --upgrade pip setuptools wheel

# 1. Install PyTorch and TensorFlow from their specific NVIDIA URLs
#    This is critical because these versions are not on PyPI.
RUN $VIRTUAL_ENV/bin/pip install \
    https://developer.download.nvidia.com/compute/redist/jp/v60/pytorch/torch-2.4.0a0+3bcc3cddb5.nv24.07.16234504-cp310-cp310-linux_aarch64.whl \
    https://developer.download.nvidia.com/compute/redist/jp/v60/tensorflow/tensorflow-2.16.1+nv24.07-cp310-cp310-linux_aarch64.whl

# 2. Install all other packages from requirements.txt efficiently
#    Use binary packages where possible to avoid compilation delays
RUN $VIRTUAL_ENV/bin/pip install --no-cache-dir -r /workspace/requirements.spark2.txt

# Expose ports
EXPOSE 8889
EXPOSE 8000

# --- Final Setup ---
# Set the default command for the container
WORKDIR /workspace
COPY spark2_app.py /workspace/spark2_app.py
CMD ["/opt/venv/bin/python", "-u", "spark2_app.py"]
