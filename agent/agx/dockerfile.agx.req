# syntax=docker/dockerfile:1.7
FROM nvcr.io/nvidia/l4t-jetpack:r36.4.0

ENV DEBIAN_FRONTEND=noninteractive \
     PIP_NO_CACHE_DIR=1 \
     PIP_INDEX_URL=https://pypi.python.org/simple \
     PIP_TRUSTED_HOST=pypi.python.org \
     PYTHONUNBUFFERED=1 \
     VIRTUAL_ENV=/opt/venv \
     PATH="/opt/venv/bin:$PATH"

USER root

# Copy requirements file
COPY requirements.agx.txt /workspace/requirements.agx.txt
COPY postgres.env /workspace/postgres.env

# OS + Python deps
RUN --mount=type=cache,target=/var/cache/apt \
        apt-get update && \
        apt-get install -y --no-install-recommends \
            python3.10 python3.10-venv  \
            ca-certificates curl wget git build-essential \
            libopenblas0 libgomp1 postgresql-client && \
    rm -rf /var/lib/apt/lists/*

# Install pip for Python 3.10
RUN curl -sS https://bootstrap.pypa.io/get-pip.py -o get-pip.py && \
    python3.10 get-pip.py && \
    rm get-pip.py

# --- Install cuSPARSELt (Online) ---
RUN wget https://developer.download.nvidia.com/compute/cusparselt/0.8.0/local_installers/cusparselt-local-tegra-repo-ubuntu2204-0.8.0_0.8.0-1_arm64.deb -O /tmp/cusparselt.deb && \
    dpkg -i /tmp/cusparselt.deb && \
    cp /var/cusparselt-local-tegra-repo-ubuntu2204-0.8.0/cusparselt-*-keyring.gpg /usr/share/keyrings/ && \
    apt-get update && \
    apt-get install -y --no-install-recommends cusparselt && \
    rm -f /tmp/cusparselt.deb && ldconfig

# --- Venv Setup ---
RUN python3.10 -m venv --system-site-packages $VIRTUAL_ENV
RUN $VIRTUAL_ENV/bin/pip install --upgrade pip setuptools wheel

# 1. Install PyTorch and TensorFlow from their specific NVIDIA URLs
#    This is critical because these versions are not on PyPI.
RUN $VIRTUAL_ENV/bin/pip install \
    https://developer.download.nvidia.com/compute/redist/jp/v61/pytorch/torch-2.5.0a0+872d972e41.nv24.08.17622132-cp310-cp310-linux_aarch64.whl \
    https://developer.download.nvidia.com/compute/redist/jp/v61/tensorflow/tensorflow-2.16.1+nv24.08-cp310-cp310-linux_aarch64.whl

# 2. Install all other packages from requirements.txt individually to avoid corruption
#    This command ignores torch and tensorflow which are already installed.
RUN $VIRTUAL_ENV/bin/pip install tensorflow-io-gcs-filesystem==0.37.1
RUN $VIRTUAL_ENV/bin/pip install notebook==7.1.3
RUN $VIRTUAL_ENV/bin/pip install jupyterlab==4.1.5
RUN $VIRTUAL_ENV/bin/pip install ipykernel==6.30.1
RUN $VIRTUAL_ENV/bin/pip install numpy==1.26.4
RUN $VIRTUAL_ENV/bin/pip install tensorboard==2.16.2
RUN $VIRTUAL_ENV/bin/pip install google-auth==2.29.0
RUN $VIRTUAL_ENV/bin/pip install google-auth-oauthlib==1.2.0
RUN $VIRTUAL_ENV/bin/pip install ml-dtypes==0.3.1
RUN $VIRTUAL_ENV/bin/pip install typing_extensions==4.15.0
RUN $VIRTUAL_ENV/bin/pip install jinja2==3.1.6
RUN $VIRTUAL_ENV/bin/pip install MarkupSafe==2.1.5
RUN $VIRTUAL_ENV/bin/pip install filelock==3.13.4
RUN $VIRTUAL_ENV/bin/pip install fsspec==2024.6.1
RUN $VIRTUAL_ENV/bin/pip install packaging==25.0
RUN $VIRTUAL_ENV/bin/pip install Markdown==3.5.2
RUN $VIRTUAL_ENV/bin/pip install werkzeug==3.0.3
RUN $VIRTUAL_ENV/bin/pip install requests==2.32.5
RUN $VIRTUAL_ENV/bin/pip install oauthlib==3.3.1
RUN $VIRTUAL_ENV/bin/pip install urllib3==2.5.0
RUN $VIRTUAL_ENV/bin/pip install rsa==4.9.1
RUN $VIRTUAL_ENV/bin/pip install cachetools==5.5.2
RUN $VIRTUAL_ENV/bin/pip install charset-normalizer==3.3.2
RUN $VIRTUAL_ENV/bin/pip install idna==3.10
RUN $VIRTUAL_ENV/bin/pip install certifi==2025.8.3
RUN $VIRTUAL_ENV/bin/pip install tensorboard-data-server==0.7.2
RUN $VIRTUAL_ENV/bin/pip install --no-binary :all: fastapi
RUN $VIRTUAL_ENV/bin/pip install uvicorn
RUN $VIRTUAL_ENV/bin/pip install pydantic
RUN $VIRTUAL_ENV/bin/pip install python-multipart
RUN $VIRTUAL_ENV/bin/pip install psycopg2-binary
RUN $VIRTUAL_ENV/bin/pip install python-dotenv

# Expose ports
EXPOSE 8889
EXPOSE 8000

# --- Final Setup ---
COPY start-jupyter.sh /usr/local/bin/start-jupyter.sh
RUN chmod +x /usr/local/bin/start-jupyter.sh

# Set the default command for the container
WORKDIR /workspace
COPY agx_app.py /workspace/agx_app.py
CMD ["python3", "/workspace/agx_app.py"]